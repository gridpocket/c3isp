/**
 * File: antiMalwareToCEF.js
 * File Created: Friday, 3rd August 2018 2:41:58 pm
 * Author: Rihab Ben Hamouda (rihab.benh@gripdocket.com)
 * -----
 * Last Modified: Friday, 21st September 2018 10:49:27 am
 * Modified By: Rihab Ben Hamouda (rihab.benh@gripdocket.com)
 * -----
 * GridPocket SAS Copyright (C) 2018 All Rights Reserved
 * This source is property of GridPocket SAS.
 * Please email contact@gridpocket.com for more information.
 */

const fs = require('fs');
const express = require('express');
const crypto = require('crypto');
const swaggerUi = require('swagger-ui-express');
const swaggerDocument = require('./swagger.json');
const multer = require('multer');

const upload = multer({ dest: 'uploads/' });
const router = express.Router();
let cef = [];

function toCEF(fe) {
  console.log(fe);
  fe.pop();
  fe.forEach((line) => {
    console.log(line);
    const l = line.split('|');
    for (let i = 0; i < l.length; i += 1) {
      if (l[i] === '' || l[i] === '  ') {
        l[i] = '""';
      }
    }
    const res = [];
    res[0] = ` rt = ${l[0]}`;
    res[1] = ` start = ${l[3]}`;
    res[2] = ` end = ${l[4]}`;
    res[3] = ` dvchost = ${l[6]}`;
    res[4] = ` filePath = ${l[8]}`;
    res[5] = ` cs1 = ${l[9]}`;
    res[6] = ` cs2 = ${l[10]}`;
    res[7] = ` cs3 = ${l[12]}`;
    res[8] = ` deviceDirection = ${l[14]}`;
    res[9] = ` cn1 = ${l[15]}`;
    res[10] = ` cn2 = ${l[16]}`;
    res[11] = ` cn3 = ${l[17]}`;
    res[12] = ` cn4 = ${l[18]}`;
    res[13] = ` msg = ${l[19]}`;
    cef.push(`CEF:0|Trend Micro|Deep Security Manager|9.6| 4000000|MSS Anti-Malware Event|6|${res}`);
  });
}

const post = function convertToJSON(req, res) {
  new Promise((resolve, reject) => {
    const { path } = req.file;
    fs.readFile(path, 'utf8', (err, data) => {
      if (err) {
        return reject(res.sendStatus(404));
      }
      const fe = data.split('\n');
      toCEF(fe);
      fs.unlinkSync(path);
      return resolve();
    });
  }).then(() => {
    const json2 = {
      spec_version: '2.0',
      type: 'stix-bundle',
      id: 'stix-bundle--hash',
      objects: [
        {
          type: 'observed-data',
          id: `observed-data--${crypto.createHmac('sha1', JSON.stringify(cef)).digest('hex')}`,
          created: new Date(),
          modified: new Date(),
          first_observed: new Date(),
          last_observed: new Date(),
          cybox: {
            spec_version: '3.0',
            objects: [
              {
                items: [cef],
              },
            ],
          },
        },
      ],
    };
    cef = [];
    json2.id = `stix-bundle--${crypto.createHmac('sha1', JSON.stringify(json2)).digest('hex')}`;
    const finalJSON = json2;
    res.json(finalJSON);
  })
    .catch((err) => {
      console.error('Error during process', err);
      res.status(500).send(err);
    });
};
router.route('/malwareToStixCEF')
  .post(upload.single('malware'), post);

router.use('/format-adapter/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));
router.use('/format-adapter/api/v1', router);

module.exports = router;
